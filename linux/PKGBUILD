pkgname=linux
pkgver=3.19.4
pkgrel=1
pkgdesc="The Linux kernel"
arch=("x86_64")
url="http://www.kernel.org"
license=('GPL2')
options=(!strip)

makedepends=('gcc' 'lz4' 'bc')
depends=('linux-firmware' 'kmod')

_grsecver=3.1-${pkgver}-201504141933
source=(https://www.kernel.org/pub/linux/kernel/v3.x/linux-${pkgver}.tar.{sign,xz}
        https://grsecurity.net/test/grsecurity-${_grsecver}.patch{,.sig}
        config
        x509.genkey)
sha256sums=('SKIP'
            '91b281fe404fd0413391a0f082383b7f5113d40bfaf51d4ed31a62943fa53ae3'
            'ab37cfe707149991d16aa781edb800b075089f90a0792894834a3cda6ff4f096'
            'SKIP'
            'd95eec6c65c9f70efb28576b35514030f0f2feeeabf768d492b68efae7d66a7e'
            'ca581821060e883b03f660d69ed0e9a7cbbf284dd757995bd31ffefa551ef316')
validpgpkeys=(647F28654894E3BD457199BE38DBBDC86092693E # Greg K-H
              DE9452CE46F42094907F108B44D1C0F82525FE49) # Bradley Spengler

prepare() {
    cd ${pkgname}-${pkgver}

    if [ ! -f /usr/src/linux/signing_key.priv ]; then
        if [ ! -n "$GENERATE_KEY" ]; then
            error 'No signing key found!'
            msg 'Re-run with GENERATE_KEY=1 to generate one.'
            return 1
        fi
    else
        ln -s /usr/src/linux/signing_key.{priv,x509} ./
    fi

    patch -p1 -i ../grsecurity-${_grsecver}.patch
    cp "${srcdir}/config" .config
    cp "${srcdir}"/x509.genkey ./
}

build() {
    cd ${pkgname}-${pkgver}
    make ${MAKEFLAGS}
}

package() {
    cd ${pkgname}-${pkgver}
	
    mkdir -p "${pkgdir}/boot"
	
    install -m 644 arch/x86/boot/bzImage "${pkgdir}"/boot/vmlinuz-${pkgver}
    make modules_install INSTALL_MOD_PATH="${pkgdir}"
    make headers_install INSTALL_HDR_PATH="${pkgdir}/usr"
	
    depmod -b "${pkgdir}" ${pkgver}-grsec

    # Remove firmware; we package it separately
    rm -r "${pkgdir}"/lib/firmware

    # Remove broken "build" symlink
    rm "${pkgdir}"/lib/modules/${pkgver}-grsec/build
}
