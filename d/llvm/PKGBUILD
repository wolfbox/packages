pkgname=llvm
pkgver=3.5.0
pkgrel=1
pkgdesc="Low Level Virtual Machine compiler toolkit."
arch=("x86_64")
url="http://llvm.org"
license=('BSD')

provides=('clang')
makedepends=('cmake' 'ninja')
depends=('glibc' 'gcc' 'perl' 'python' 'libffi' 'zlib')

source=(http://llvm.org/releases/${pkgver}/llvm-${pkgver}.src.tar.xz
        http://llvm.org/releases/${pkgver}/cfe-${pkgver}.src.tar.xz
        http://llvm.org/releases/${pkgver}/compiler-rt-${pkgver}.src.tar.xz)
sha256sums=('28e199f368ef0a4666708f31c7991ad3bcc3a578342b0306526dd35f07595c03'
            'fc80992e004b06f6c7afb612de1cdaa9ac9d25811c55f94fcf7331d9b81cdb8b'
            'a4b3e655832bf8d9a357ea2c771db347237460e131988cbb96cda40ff39a8136')

prepare() {
	cd "${srcdir}"/${pkgname}-${pkgver}.src
	rm -r tools/clang || true
	rm -r projects/compiler-rt || true
	cp -lR ../cfe-"${pkgver}".src ./tools/clang
	cp -lR ../compiler-rt-${pkgver}.src ./projects/compiler-rt

	# Fix hardcoded libdir
	sed -i "s|\"lib\"|\"lib/${MULTIARCH}\"|" \
		tools/clang/lib/Frontend/CompilerInvocation.cpp
	sed -i "s|\"lib\"|\"lib/${MULTIARCH}\"|" \
		tools/clang/lib/Driver/Tools.cpp
	sed -i "s|ActiveLibDir = ActivePrefix + \"/lib\"|ActiveLibDir = ActivePrefix + \"/lib/${MULTIARCH}\"|g" \
		tools/llvm-config/llvm-config.cpp
	sed -i "s|/lib64\"|/lib/${MULTIARCH}\"|" \
	    tools/clang/lib/Driver/ToolChains.cpp
	
	# Our libdir is one directory deeper than clang's toolchain detection expects
	sed -i 's|\.\./include|../../include|' \
		tools/clang/lib/Driver/ToolChains.cpp
}

build() {
	mkdir -p "${srcdir}"/build
	cd "${srcdir}"/build

	export CC=gcc
	export CXX=g++
	cmake ../${pkgname}-${pkgver}.src -G Ninja \
	      -DCMAKE_INSTALL_PREFIX=/usr \
	      -DLLVM_DEFAULT_TARGET_TRIPLE=${CHOST} \
	      -DLLVM_LIBDIR_SUFFIX=/${MULTIARCH}/ \
	      -DLLVM_ENABLE_RTTI=ON \
	      -DLLVM_ENABLE_FFI=ON \
	      -DCLANG_RESOURCE_DIR=../lib/${MULTIARCH}/clang/${pkgver}/ \
	      -DBUILD_SHARED_LIBS=ON

	ninja
}

package() {
	cd "${srcdir}"/build

    mkdir -p "${pkgdir}"/usr/man/man1
	DESTDIR="${pkgdir}" ninja install
	
	# Add target symlinks
	( cd "${pkgdir}"/usr/bin
	  ln clang ${CHOST}-clang
	  ln clang++ ${CHOST}-clang++
	)

	# Remove example libraries
	rm -f "${pkgdir}"/usr/lib/${MULTIARCH}/LLVMHello*

	# Install static analyzer
	(
		cd "${srcdir}/${pkgname}-${pkgver}.src/tools/clang/tools"
		for tool in scan-view scan-build; do
			install -m755 ${tool}/${tool} "${pkgdir}"/usr/bin/
		done
		install -m755 scan-build/{ccc,c++}-analyzer "${pkgdir}"/usr/bin
		install -m644 scan-build/scan-build.1 "${pkgdir}"/usr/man/man1/
	)
}
