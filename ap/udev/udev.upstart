#!/bin/sh

description "The udev device manager daemon."
version 182

oom score -1

start on stopped rundir
expect fork

pre-start script
    UDEV_ROOT=/dev

    check_mounted() {
      grep -E -q "^[^[:space:]]+ $1 $2" /proc/mounts
      return $?
    }

    mount_devpts() {
      if ! check_mounted $UDEV_ROOT/pts devpts ; then
        mkdir $UDEV_ROOT/pts 2> /dev/null
        mount -n -o mode=0620,gid=5 -t devpts devpts $UDEV_ROOT/pts
        fi
    }

	if grep -qw devtmpfs /proc/filesystems ; then
	    if ! check_mounted $UDEV_ROOT devtmpfs ; then
	        # umount shm if needed
		    check_mounted $UDEV_ROOT/shm tmpfs && umount -l $UDEV_ROOT/shm

		    # Umount pts if needed, we will remount it later:
		    check_mounted $UDEV_ROOT/pts devpts && umount -l $UDEV_ROOT/pts

		    # Mount tmpfs on $UDEV_ROOT:
		    mount -n -t devtmpfs devtmpfs $UDEV_ROOT
	    fi
	else
		# Mount tmpfs on $UDEV_ROOT:
		if ! check_mounted $UDEV_ROOT tmpfs ; then
		  # umount shm if needed
		  check_mounted $UDEV_ROOT/shm tmpfs && umount -l $UDEV_ROOT/shm

		  # Umount pts if needed, we will remount it later:
		  check_mounted $UDEV_ROOT/pts devpts && umount -l $UDEV_ROOT/pts

		  # Mount tmpfs on $UDEV_ROOT:
		  # the -n is because we don't want $UDEV_ROOT umounted when
		  # someone (rc.[06]) calls umount -a
		  mount -n -o mode=0755 -t tmpfs tmpfs $UDEV_ROOT
		fi
	fi
	# Mount devpts
	mount_devpts
end script

exec /usr/bin/udevd --daemon

post-start script
    /usr/bin/udevadm trigger --type=subsystems --action=add
    /usr/bin/udevadm trigger --type=devices --action=add
end script
