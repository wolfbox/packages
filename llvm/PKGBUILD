pkgname=('llvm' 'llvm-libs')
pkgver=3.5.1
pkgrel=1
pkgdesc="Low Level Virtual Machine compiler toolkit"
arch=("x86_64")
url="http://llvm.org"
license=('BSD')

provides=('clang')
makedepends=('cmake' 'ninja' 'pkg-config')
depends=('gcc' 'perl' 'python' 'isl')

source=(http://llvm.org/releases/${pkgver}/llvm-${pkgver}.src.tar.xz{,.sig}
        http://llvm.org/releases/${pkgver}/cfe-${pkgver}.src.tar.xz{,.sig}
        http://llvm.org/releases/${pkgver}/compiler-rt-${pkgver}.src.tar.xz{,.sig}
        http://llvm.org/releases/${pkgver}/polly-${pkgver}.src.tar.xz{,.sig}
        add-so-versioning.diff
        polly-macros-llvmexports.patch)
sha256sums=('bf3275d2d7890015c8d8f5e6f4f882f8cf3bf51967297ebe74111d6d8b53be15'
            'SKIP'
            '6773f3f9cf815631cc7e779ec134ddd228dc8e9a250e1ea3a910610c59eb8f5c'
            'SKIP'
            'adf4b526f33e681aff5961f0821f5b514d3fc375410008842640b56a2e6a837a'
            'SKIP'
            'ac12ec5ff2119ac1d2916c105920e1880321a7d97b6f5ec5957a588450704f04'
            'SKIP'
            'bbd0375f6ff2a7bf827e1402d8cadcc57686470d9b26e8d5c615fd5a3e1c7a0b'
            '0f98cca6741881d9b1145e1f077303c3565c40552ea5d18eff15cc20fbba6754')
validpgpkeys=('54E3BDE33185D9F69664D22455F5CD70BB5A0569'  # Bill Wendling <void@llvm.org>
              '11E521D646982372EB577A1F8F0871F202119294') # Tom Stellard <tom@stellard.net>

prepare() {
	cd "${srcdir}"/${pkgname}-${pkgver}.src
	rm -r tools/clang || true
	rm -r tools/polly || true
	rm -r projects/compiler-rt || true
	cp -lR ../cfe-"${pkgver}".src ./tools/clang
	cp -lR ../polly-"${pkgver}".src ./tools/polly
	cp -lR ../compiler-rt-${pkgver}.src ./projects/compiler-rt

	# Fix hardcoded libdir
	sed -i "s|\"lib\"|\"lib/${MULTIARCH}\"|" \
		tools/clang/lib/Frontend/CompilerInvocation.cpp
	sed -i "s|\"lib\"|\"lib/${MULTIARCH}\"|" \
		tools/clang/lib/Driver/Tools.cpp
	sed -i "s|ActiveLibDir = ActivePrefix + \"/lib\"|ActiveLibDir = ActivePrefix + \"/lib/${MULTIARCH}\"|g" \
		tools/llvm-config/llvm-config.cpp
	sed -i "s|/lib64\"|/lib/${MULTIARCH}\"|" \
	    tools/clang/lib/Driver/ToolChains.cpp
	
	# Our libdir is one directory deeper than clang's toolchain detection expects
	sed -i 's|\.\./include|../../include|' \
		tools/clang/lib/Driver/ToolChains.cpp

	# Version output .so files. From reviews.llvm.org/D6157, as a solution to
	# llvm.org/bugs/show_bug.cgi?id=15493
	patch -p0 -i "${srcdir}/add-so-versioning.diff"

	# Fix LINK_POLLY_INTO_TOOLS build, from r222977
	( cd tools/polly
	  patch -p2 -i "${srcdir}"/polly-macros-llvmexports.patch )
}

build() {
	mkdir -p "${srcdir}"/build
	cd "${srcdir}"/build

	export CC=gcc
	export CXX=g++
	cmake ../${pkgname}-${pkgver}.src -G Ninja \
	      -DCMAKE_INSTALL_PREFIX=/usr \
	      -DLLVM_DEFAULT_TARGET_TRIPLE=${CHOST} \
	      -DLLVM_LIBDIR_SUFFIX=/${MULTIARCH}/ \
	      -DLLVM_ENABLE_RTTI=ON \
	      -DLLVM_ENABLE_FFI=ON \
	      -DFFI_INCLUDE_DIR="/usr/lib/${MULTIARCH}/libffi-$(pkg-config --modversion libffi)/include" \
	      -DCLANG_RESOURCE_DIR=../lib/${MULTIARCH}/clang/${pkgver}/ \
	      -DLINK_POLLY_INTO_TOOLS=ON \
	      -DBUILD_SHARED_LIBS=ON

	ninja
}

package_llvm() {
    depends+=('llvm-libs')
	cd "${srcdir}"/build

    mkdir -p "${pkgdir}"/usr/share/man/man1
	DESTDIR="${pkgdir}" ninja install
	
	# Add target symlinks
	( cd "${pkgdir}"/usr/bin
	  ln clang ${CHOST}-clang
	  ln clang++ ${CHOST}-clang++
	)

	# Remove example libraries
	rm -f "${pkgdir}"/usr/lib/${MULTIARCH}/LLVMHello*

	# Install static analyzer
	(
		mkdir -p "${pkgdir}"/usr/lib/${MULTIARCH}/clang-analyzer
		cd "${srcdir}/${pkgname}-${pkgver}.src/tools/clang/tools"
		for _tool in scan-view scan-build; do
			cp -r ${_tool} "${pkgdir}"/usr/lib/${MULTIARCH}/clang-analyzer
			ln -s /usr/lib/${MULTIARCH}/clang-analyzer/${_tool}/${_tool} "${pkgdir}"/usr/bin
		done
		install -m755 scan-build/{ccc,c++}-analyzer "${pkgdir}"/usr/bin
		install -m644 scan-build/scan-build.1 "${pkgdir}"/usr/share/man/man1/

		# Fix python interpreter
		sed -i \
			-e 's|env python$|&2|' \
			-e 's|/usr/bin/python$|&2|' \
			"$pkgdir/usr/lib/${MULTIARCH}/clang-analyzer/scan-view/scan-view" \
			"$pkgdir/usr/lib/${MULTIARCH}/clang-analyzer/scan-build/set-xcode-analyzer"

		# Fix clang path
		sed -i 's:"$RealBin/bin/clang":"/usr/bin/clang":' "${pkgdir}"/usr/lib/${MULTIARCH}/clang-analyzer/scan-build/scan-build
	)

	# Move runtime libraries into llvm-libs
	mv -f "${pkgdir}"/usr/lib/${MULTIARCH}/libLLVM*.so* "${srcdir}"/
}

package_llvm-libs() {
    pkgdesc="${pkgdesc} - runtime libraries"
    depends=('gcc-libs' 'glibc' 'libffi' 'zlib')

    cd "${srcdir}"
    install -d "${pkgdir}/usr/lib/${MULTIARCH}"
    mv libLLVM*.so* "${pkgdir}/usr/lib/${MULTIARCH}/"
}
